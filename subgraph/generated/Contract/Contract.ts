// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewApplicant extends ethereum.Event {
  get params(): NewApplicant__Params {
    return new NewApplicant__Params(this);
  }
}

export class NewApplicant__Params {
  _event: NewApplicant;

  constructor(event: NewApplicant) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class NewGrant extends ethereum.Event {
  get params(): NewGrant__Params {
    return new NewGrant__Params(this);
  }
}

export class NewGrant__Params {
  _event: NewGrant;

  constructor(event: NewGrant) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get grantor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get amountAvailable(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NewGrantRequest extends ethereum.Event {
  get params(): NewGrantRequest__Params {
    return new NewGrantRequest__Params(this);
  }
}

export class NewGrantRequest__Params {
  _event: NewGrantRequest;

  constructor(event: NewGrantRequest) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get project(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get grantId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountInUsd(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NewGrantor extends ethereum.Event {
  get params(): NewGrantor__Params {
    return new NewGrantor__Params(this);
  }
}

export class NewGrantor__Params {
  _event: NewGrantor;

  constructor(event: NewGrantor) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class NewProject extends ethereum.Event {
  get params(): NewProject__Params {
    return new NewProject__Params(this);
  }
}

export class NewProject__Params {
  _event: NewProject;

  constructor(event: NewProject) {
    this._event = event;
  }

  get id(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UpdateGrant extends ethereum.Event {
  get params(): UpdateGrant__Params {
    return new UpdateGrant__Params(this);
  }
}

export class UpdateGrant__Params {
  _event: UpdateGrant;

  constructor(event: UpdateGrant) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amountAvailable(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class UpdateGrantRequest extends ethereum.Event {
  get params(): UpdateGrantRequest__Params {
    return new UpdateGrantRequest__Params(this);
  }
}

export class UpdateGrantRequest__Params {
  _event: UpdateGrantRequest;

  constructor(event: UpdateGrantRequest) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class Contract__addressToApplicantResult {
  value0: Address;
  value1: string;
  value2: boolean;

  constructor(value0: Address, value1: string, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }
}

export class Contract__addressToGrantorResult {
  value0: Address;
  value1: string;
  value2: boolean;

  constructor(value0: Address, value1: string, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }
}

export class Contract__addressToProjectResult {
  value0: Address;
  value1: Address;
  value2: string;
  value3: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: string,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }
}

export class Contract__requestsResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: i32;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }
}

export class Contract__getAllGrantsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get grantor(): Address {
    return this[1].toAddress();
  }

  get name(): string {
    return this[2].toString();
  }

  get amountAvailable(): BigInt {
    return this[3].toBigInt();
  }

  get status(): i32 {
    return this[4].toI32();
  }

  get isRegistered(): boolean {
    return this[5].toBoolean();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  addressToApplicant(param0: Address): Contract__addressToApplicantResult {
    let result = super.call(
      "addressToApplicant",
      "addressToApplicant(address):(address,string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__addressToApplicantResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBoolean()
    );
  }

  try_addressToApplicant(
    param0: Address
  ): ethereum.CallResult<Contract__addressToApplicantResult> {
    let result = super.tryCall(
      "addressToApplicant",
      "addressToApplicant(address):(address,string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__addressToApplicantResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBoolean()
      )
    );
  }

  addressToGrantor(param0: Address): Contract__addressToGrantorResult {
    let result = super.call(
      "addressToGrantor",
      "addressToGrantor(address):(address,string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__addressToGrantorResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBoolean()
    );
  }

  try_addressToGrantor(
    param0: Address
  ): ethereum.CallResult<Contract__addressToGrantorResult> {
    let result = super.tryCall(
      "addressToGrantor",
      "addressToGrantor(address):(address,string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__addressToGrantorResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBoolean()
      )
    );
  }

  addressToProject(param0: Address): Contract__addressToProjectResult {
    let result = super.call(
      "addressToProject",
      "addressToProject(address):(address,address,string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__addressToProjectResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toBoolean()
    );
  }

  try_addressToProject(
    param0: Address
  ): ethereum.CallResult<Contract__addressToProjectResult> {
    let result = super.tryCall(
      "addressToProject",
      "addressToProject(address):(address,address,string,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__addressToProjectResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toBoolean()
      )
    );
  }

  requests(param0: BigInt): Contract__requestsResult {
    let result = super.call(
      "requests",
      "requests(uint256):(uint256,address,uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Contract__requestsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toI32()
    );
  }

  try_requests(param0: BigInt): ethereum.CallResult<Contract__requestsResult> {
    let result = super.tryCall(
      "requests",
      "requests(uint256):(uint256,address,uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__requestsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toI32()
      )
    );
  }

  getAllGrants(): Array<Contract__getAllGrantsResultValue0Struct> {
    let result = super.call(
      "getAllGrants",
      "getAllGrants():((uint256,address,string,uint256,uint8,bool)[])",
      []
    );

    return result[0].toTupleArray<Contract__getAllGrantsResultValue0Struct>();
  }

  try_getAllGrants(): ethereum.CallResult<
    Array<Contract__getAllGrantsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllGrants",
      "getAllGrants():((uint256,address,string,uint256,uint8,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__getAllGrantsResultValue0Struct>()
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RegisterAsApplicantCall extends ethereum.Call {
  get inputs(): RegisterAsApplicantCall__Inputs {
    return new RegisterAsApplicantCall__Inputs(this);
  }

  get outputs(): RegisterAsApplicantCall__Outputs {
    return new RegisterAsApplicantCall__Outputs(this);
  }
}

export class RegisterAsApplicantCall__Inputs {
  _call: RegisterAsApplicantCall;

  constructor(call: RegisterAsApplicantCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterAsApplicantCall__Outputs {
  _call: RegisterAsApplicantCall;

  constructor(call: RegisterAsApplicantCall) {
    this._call = call;
  }
}

export class RegisterAsGrantorCall extends ethereum.Call {
  get inputs(): RegisterAsGrantorCall__Inputs {
    return new RegisterAsGrantorCall__Inputs(this);
  }

  get outputs(): RegisterAsGrantorCall__Outputs {
    return new RegisterAsGrantorCall__Outputs(this);
  }
}

export class RegisterAsGrantorCall__Inputs {
  _call: RegisterAsGrantorCall;

  constructor(call: RegisterAsGrantorCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterAsGrantorCall__Outputs {
  _call: RegisterAsGrantorCall;

  constructor(call: RegisterAsGrantorCall) {
    this._call = call;
  }
}

export class CreateProjectCall extends ethereum.Call {
  get inputs(): CreateProjectCall__Inputs {
    return new CreateProjectCall__Inputs(this);
  }

  get outputs(): CreateProjectCall__Outputs {
    return new CreateProjectCall__Outputs(this);
  }
}

export class CreateProjectCall__Inputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }

  get _project(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateProjectCall__Outputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }
}

export class CreateGrantCall extends ethereum.Call {
  get inputs(): CreateGrantCall__Inputs {
    return new CreateGrantCall__Inputs(this);
  }

  get outputs(): CreateGrantCall__Outputs {
    return new CreateGrantCall__Outputs(this);
  }
}

export class CreateGrantCall__Inputs {
  _call: CreateGrantCall;

  constructor(call: CreateGrantCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _amountInUsd(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateGrantCall__Outputs {
  _call: CreateGrantCall;

  constructor(call: CreateGrantCall) {
    this._call = call;
  }
}

export class RequestGrantCall extends ethereum.Call {
  get inputs(): RequestGrantCall__Inputs {
    return new RequestGrantCall__Inputs(this);
  }

  get outputs(): RequestGrantCall__Outputs {
    return new RequestGrantCall__Outputs(this);
  }
}

export class RequestGrantCall__Inputs {
  _call: RequestGrantCall;

  constructor(call: RequestGrantCall) {
    this._call = call;
  }

  get _project(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _grantId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amountInUsd(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RequestGrantCall__Outputs {
  _call: RequestGrantCall;

  constructor(call: RequestGrantCall) {
    this._call = call;
  }
}

export class ResolveRequestCall extends ethereum.Call {
  get inputs(): ResolveRequestCall__Inputs {
    return new ResolveRequestCall__Inputs(this);
  }

  get outputs(): ResolveRequestCall__Outputs {
    return new ResolveRequestCall__Outputs(this);
  }
}

export class ResolveRequestCall__Inputs {
  _call: ResolveRequestCall;

  constructor(call: ResolveRequestCall) {
    this._call = call;
  }

  get _requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isApproved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ResolveRequestCall__Outputs {
  _call: ResolveRequestCall;

  constructor(call: ResolveRequestCall) {
    this._call = call;
  }
}

export class CloseGrantCall extends ethereum.Call {
  get inputs(): CloseGrantCall__Inputs {
    return new CloseGrantCall__Inputs(this);
  }

  get outputs(): CloseGrantCall__Outputs {
    return new CloseGrantCall__Outputs(this);
  }
}

export class CloseGrantCall__Inputs {
  _call: CloseGrantCall;

  constructor(call: CloseGrantCall) {
    this._call = call;
  }

  get _grantId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseGrantCall__Outputs {
  _call: CloseGrantCall;

  constructor(call: CloseGrantCall) {
    this._call = call;
  }
}
